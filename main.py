import asyncio
import os
import sys
from telethon import TelegramClient
from telethon.tl.functions.payments import GetUserStarGiftsRequest

# === –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
api_id = os.getenv("API_ID")
api_hash = os.getenv("API_HASH")
session_name = os.getenv("SESSION_NAME", "bot_session")

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ ===
if not api_id or not api_hash:
    print("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è API_ID –∏ API_HASH –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.")
    sys.exit(1)

try:
    api_id = int(api_id)
except ValueError:
    print("‚ùå –û—à–∏–±–∫–∞: API_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
    sys.exit(1)

# === –û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
async def main():
    async with TelegramClient(session_name, api_id, api_hash) as client:
        me = await client.get_me()
        print(f"üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ {me.first_name} (@{me.username or '–Ω–µ—Ç username'})")

        # –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–æ–≤
        try:
            result = await client(GetUserStarGiftsRequest(
                user_id=await client.get_input_entity("me"),
                offset='',
                limit=100
            ))
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–æ–≤: {e}")
            return

        if not result.gifts:
            print("üôÅ –£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–∞—Ä–∫–æ–≤.")
            return

        print(f"üéÅ –ù–∞–π–¥–µ–Ω–æ {len(result.gifts)} –ø–æ–¥–∞—Ä–∫–æ–≤:\n")
        for gift in result.gifts:
            try:
                print(f"üéÅ {gift.gift.title} ‚Äî {gift.stars} ‚≠ê")
            except Exception as e:
                print("üîç –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –ø–æ–¥–∞—Ä–∫–æ–≤:", e)

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    asyncio.run(main())
