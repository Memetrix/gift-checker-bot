import asyncio
import os
import sys

from telethon import TelegramClient

from gifts import GetUserStarGiftsRequest

"""Simple script to check a user's gifts using a custom request."""

# === Environment ===
api_id = os.getenv("API_ID")
api_hash = os.getenv("API_HASH")
session_name = os.getenv("SESSION_NAME", "bot_session")

# Username or phone of the target user
target = sys.argv[1] if len(sys.argv) > 1 else "me"

if not api_id or not api_hash:
    print("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è API_ID –∏ API_HASH –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.")
    sys.exit(1)

try:
    api_id_int = int(api_id)
except ValueError:
    print("‚ùå –û—à–∏–±–∫–∞: API_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
    sys.exit(1)


async def main() -> None:
    async with TelegramClient(session_name, api_id_int, api_hash) as client:
        me = await client.get_me()
        print(f"üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ {me.first_name} (@{me.username or '–Ω–µ—Ç username'})")

        try:
            entity = await client.get_input_entity(target)
            result = await client(
                GetUserStarGiftsRequest(user_id=entity, offset="", limit=100)
            )
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–æ–≤: {e}")
            return

        gifts = getattr(result, "gifts", [])
        matching = [
            g
            for g in gifts
            if "jack" in getattr(g, "slug", "").lower()
            and "knockout" in getattr(g, "slug", "").lower()
        ]
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(matching)} –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–¥–∞—Ä–∫–æ–≤")

        if len(matching) >= 6:
            print("‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –Ω—É–∂–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏")
        else:
            print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–¥–∞—Ä–∫–æ–≤")


if __name__ == "__main__":
    asyncio.run(main())
